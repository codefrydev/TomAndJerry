@page "/playmedia/{videId}"
@inject NavigationManager nav
@inject Data Datas
@inject IJSRuntime JS

<PageTitle>@Datas.GetVideo(VideId).CommentName.Substring(6) - Tom & Jerry</PageTitle>

<div class="min-h-screen bg-gray-50">
    <div class="max-w-7xl mx-auto px-4 py-6">
        <div class="grid grid-cols-1 xl:grid-cols-4 gap-6">
            <!-- Main Content Area -->
            <div class="xl:col-span-3 space-y-6">
                <!-- Video Player -->
                <div class="relative bg-black rounded-xl overflow-hidden shadow-lg" style="aspect-ratio: 16/9;">
                    <iframe width="100%"
                            height="100%"
                            src="@Datas.GetVideo(VideId).VideoUrl"
                            frameborder="0"
                            allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
                            allowfullscreen
                            class="absolute top-0 left-0 w-full h-full">
                    </iframe>
                </div>
                
                <!-- Video Title and Info -->
                <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-200">
                    <h1 class="text-2xl font-bold text-gray-900 leading-tight mb-4">
                        @Datas.GetVideo(VideId).CommentName.Substring(6)
                    </h1>
                    
                    <!-- Video Stats -->
                    <div class="flex items-center justify-between text-sm text-gray-600 mb-4">
                        <div class="flex items-center space-x-4">
                            <span class="font-medium">@GetRandomViews() views</span>
                            <span>•</span>
                            <span>@GetRandomTimeAgo()</span>
                        </div>
                        <div class="flex items-center space-x-2">
                            <button class="flex items-center space-x-2 px-4 py-2 rounded-full hover:bg-gray-100 transition-colors">
                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V5a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905 0 .714-.211 1.412-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5"></path>
                                </svg>
                                <span>Like</span>
                            </button>
                            <button class="flex items-center space-x-2 px-4 py-2 rounded-full hover:bg-gray-100 transition-colors">
                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
                                </svg>
                                <span>Share</span>
                            </button>
                            <button class="flex items-center space-x-2 px-4 py-2 rounded-full hover:bg-gray-100 transition-colors">
                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z"></path>
                                </svg>
                                <span>Save</span>
                            </button>
                        </div>
                    </div>
                    
                    <!-- Channel Info -->
                    <div class="flex items-center justify-between py-4 border-t border-gray-200">
                        <div class="flex items-center space-x-3">
                            <div class="w-12 h-12 rounded-full shadow-md overflow-hidden">
                                <img src="Tom.png" alt="Tom & Jerry" class="w-full h-full object-cover"/>
                            </div>
                            <div>
                                <h3 class="font-semibold text-gray-900">Tom & Jerry Channel</h3>
                                <p class="text-sm text-gray-600">2.5M subscribers</p>
                            </div>
                        </div>
                        <button class="px-6 py-2 bg-red-600 text-white rounded-full hover:bg-red-700 transition-colors font-medium">
                            Subscribe
                        </button>
                    </div>
                </div>
                
                <!-- Video Description -->
                <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-200">
                    <div class="flex items-center justify-between mb-4">
                        <span class="text-lg font-semibold text-gray-900">Description</span>
                        <button class="text-sm text-red-600 hover:text-red-800 font-medium">Show more</button>
                    </div>
                    <p class="text-sm text-gray-700 leading-relaxed">
                        @Datas.GetVideo(VideId).Description
                    </p>
                </div>
                
                <!-- Comments Section -->
                <div class="bg-white rounded-xl shadow-sm border border-gray-200">
                    <div class="p-6 border-b border-gray-200">
                        <div class="flex items-center justify-between">
                            <h3 class="text-lg font-semibold text-gray-900">Comments</h3>
                            <div class="flex items-center space-x-2 text-sm text-gray-600">
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
                                </svg>
                                <span>Sort by</span>
                            </div>
                        </div>
                    </div>
                    
                    @if (show)
                    {
                        <div class="p-6">
                            <button @onclick="ShowComment"
                                    class="w-full px-6 py-3 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors font-medium">
                                Show Comments
                            </button>
                        </div>
                    }
                    else
                    {
                        <div>
                            <div class="border-b border-gray-200">
                                <nav class="flex space-x-8 px-6">
                                    <button @onclick="@(() => { activeTab = "giscus"; StateHasChanged(); })" 
                                            class="@(activeTab == "giscus" ? "border-red-500 text-red-600" : "border-transparent text-gray-500 hover:text-gray-700") py-4 px-1 border-b-2 font-medium text-sm transition-colors">
                                        Giscus
                                    </button>
                                    <button @onclick="@(() => { activeTab = "disqus"; LoadGiscud(Datas.GetVideo(VideId).CommentName); StateHasChanged(); })" 
                                            class="@(activeTab == "disqus" ? "border-red-500 text-red-600" : "border-transparent text-gray-500 hover:text-gray-700") py-4 px-1 border-b-2 font-medium text-sm transition-colors">
                                        Disqus
                                    </button>
                                </nav>
                            </div>
                            <div class="p-6">
                                @if (activeTab == "giscus")
                                {
                                    <Giscus Term="@Datas.GetVideo(VideId).CommentName"/>
                                }
                                else
                                {
                                    <div id="disqus_thread"></div>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
            
            <!-- Sidebar -->
            <div class="xl:col-span-1">
                <div class="space-y-4">
                    <div class="flex items-center justify-between mb-4">
                        <h2 class="text-lg font-semibold text-gray-900">Up next</h2>
                        <button class="text-sm text-red-600 hover:text-red-800 font-medium">Autoplay</button>
                    </div>
                    @foreach (var item in Datas.GetRandomVideo().Take(8))
                    {
                        <div @onclick="()=>GoTOPage(item)" class="cursor-pointer">
                            <Thumbnail VideoModel="@item"/>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code
{
    bool show = true;
    string activeTab = "giscus";
    [Parameter] public string VideId { get; set; } = string.Empty;

    private async Task GoTOPage(Video video)
    {
        await LoadGiscud(video.CommentName);
        nav.NavigateTo($"playmedia/{video.Id}");
    }

    async Task LoadGiscud(string id)
    {
        await JS.InvokeVoidAsync("loadDisqus", nav.Uri, id);
    }

    void ShowComment()
    {
        show = false;
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        Datas.OnChange += StateHasChanged;
        await Datas.InitializeAsync();
    }

    public void Dispose()
    {
        Datas.OnChange -= StateHasChanged;
    }
    
    private string GetRandomViews()
    {
        var random = new Random();
        var views = random.Next(100000, 10000000);
        if (views >= 1000000)
        {
            return $"{views / 1000000:F1}M";
        }
        else if (views >= 1000)
        {
            return $"{views / 1000:F1}K";
        }
        return views.ToString();
    }
    
    private string GetRandomTimeAgo()
    {
        var random = new Random();
        var days = random.Next(1, 365);
        if (days < 7)
            return $"{days} days ago";
        else if (days < 30)
            return $"{days / 7} weeks ago";
        else if (days < 365)
            return $"{days / 30} months ago";
        else
            return $"{days / 365} years ago";
    }
}
