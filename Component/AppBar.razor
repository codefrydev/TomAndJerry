@inject Data Datas
@inject NavigationManager nav
@inject IJSRuntime JSRuntime

<header class="fixed top-0 left-0 right-0 z-50 bg-white border-b border-gray-200 shadow-sm">
    <div class="max-w-7xl mx-auto px-4">
        <div class="flex items-center justify-between h-16">
            <!-- Left Section -->
            <div class="flex items-center space-x-4">
                <!-- Menu Button -->
                <button @onclick="GoToHomePage" 
                        class="p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-full transition-colors">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                    </svg>
                </button>
                
                <!-- Logo -->
                <div class="flex items-center space-x-3">
                    <div class="w-8 h-8 rounded-full overflow-hidden">
                        <img src="Tom.png" alt="Tom & Jerry" class="w-full h-full object-cover"/>
                    </div>
                    <span class="text-xl font-bold text-gray-900">Tom & Jerry</span>
                </div>
            </div>
            
            <!-- Center Section - Search -->
            <div class="flex-1 max-w-2xl mx-8">
                <div class="relative">
                    <div class="flex items-center bg-white border border-gray-300 rounded-full shadow-sm hover:shadow-md transition-shadow">
                        <input type="text"
                               name="text"
                               @bind-value="@FindData"
                               class="flex-1 px-4 py-2 text-sm border-0 rounded-l-full focus:outline-none focus:ring-0"
                               placeholder="Search Tom & Jerry episodes...">
                        
                        <button class="px-4 py-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-r-full transition-colors" 
                                @onclick="GoTOPage">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                            </svg>
                        </button>
                    </div>
                </div>
            </div>
            
            <!-- Right Section -->
            <div class="flex items-center space-x-2">
                <!-- Stats -->
                <div class="hidden md:flex items-center space-x-4 text-sm text-gray-600">
                    <div class="text-center">
                        @if (Datas.VideosData.Count == 0)
                        {
                            <div class="h-5 bg-gray-200 rounded w-8 mx-auto mb-1 skeleton"></div>
                            <div class="text-xs text-gray-500">Episodes</div>
                        }
                        else
                        {
                            <div class="font-semibold text-gray-900">@Datas.VideosData.Count</div>
                            <div class="text-xs text-gray-500">Episodes</div>
                        }
                    </div>
                </div>
                
                <!-- Profile -->
                <div class="w-8 h-8 rounded-full overflow-hidden ring-2 ring-gray-200">
                    <img src="Tom.png" alt="Profile" class="w-full h-full object-cover"/>
                </div>
            </div>
        </div>
    </div>
</header>

@code {
    public string FindData = string.Empty;

    void GoToHomePage()
    {
        nav.NavigateTo("");
    }

    public void GoTOPage()
    {
        Filter();
        if (!string.IsNullOrEmpty(FindData))
        {
            nav.NavigateTo($"Search/{FindData}");
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("blazorKeyPressed", DotNetObjectReference.Create(this));
        }
    }

    [JSInvokable]
    public void OnArrowKeyPressed(string key)
    {
        Filter();
        if (key == "Enter" && !string.IsNullOrEmpty(FindData))
        {
            nav.NavigateTo($"Search/{FindData}");
        }

        StateHasChanged();
    }

    void Filter()
    {
        Datas.FilteredData = Datas.VideosData.Where(x => x.Description != null && x.Description.Contains(FindData, StringComparison.OrdinalIgnoreCase))
            .ToList();
    }

}
﻿


@code{

    protected override async Task OnInitializedAsync()
    {
        Datas.OnChange += StateHasChanged;
        await Datas.InitializeAsync();
    }

    public void Dispose()
    {
        Datas.OnChange -= StateHasChanged;
    }

}
