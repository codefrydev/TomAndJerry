@using TomAndJerry.Services
@using TomAndJerry.Model
@inject IStateService StateService
@inject NavigationManager nav
@inject IJSRuntime JSRuntime

<header class="fixed top-0 left-0 right-0 z-50 tom-jerry-header shadow-lg">
    <div class="max-w-7xl mx-auto px-2 sm:px-4">
        <div class="flex items-center justify-between h-14 sm:h-16">
            <!-- Left Section -->
            <div class="flex items-center space-x-2 sm:space-x-4">
                <!-- Logo -->
                <div class="flex items-center space-x-2 sm:space-x-3 cursor-pointer" @onclick="GoToHomePage">
                    <div class="tom-character">
                        <div class="w-8 h-8 sm:w-10 sm:h-10 rounded-full overflow-hidden ring-2 ring-white/30 shadow-lg">
                            <RandomSticker Category="classic" CssClass="w-full h-full" ImageCssClass="w-full h-full object-cover" AutoRefresh="true" RefreshIntervalSeconds="12" />
                        </div>
                    </div>
                </div>
                
                <!-- Navigation Links -->
                <div class="hidden md:flex items-center space-x-4">
                    <button @onclick="GoToHomePage" 
                            class="text-white hover:text-cartoon-yellow transition-colors font-comic font-bold">
                        Episodes
                    </button>
                    <button @onclick="GoToStickers" 
                            class="text-white hover:text-cartoon-yellow transition-colors font-comic font-bold">
                        Stickers
                    </button>
                </div>
            </div>
            
            <!-- Center Section - Search -->
            <div class="flex-1 max-w-xs sm:max-w-md md:max-w-2xl mx-2 sm:mx-4 md:mx-8">
                <RealTimeSearch />
            </div>
            
            <!-- Right Section -->
            <div class="flex items-center space-x-1 sm:space-x-2">
                <!-- Stats -->
                <div class="hidden sm:flex items-center space-x-2 md:space-x-4 text-sm text-white">
                    <div class="text-center bg-white/20 rounded-2xl px-2 sm:px-4 py-1 sm:py-2 cartoon-rounded">
                        @if (StateService.IsLoading || !StateService.CurrentVideos.Any())
                        {
                            <div class="h-4 sm:h-5 bg-white/30 rounded w-6 sm:w-8 mx-auto mb-1 skeleton"></div>
                            <div class="text-xs text-white/80 font-comic">Episodes</div>
                        }
                        else
                        {
                            <div class="font-bold text-white font-cartoon text-sm sm:text-lg">@StateService.CurrentVideos.Count()</div>
                            <div class="text-xs text-white/80 font-comic">Episodes</div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</header>

@code {
    void GoToHomePage()
    {
        nav.NavigateTo("");
    }
    
    void GoToStickers()
    {
        nav.NavigateTo("stickers");
    }

    protected override void OnInitialized()
    {
        StateService.OnStateChanged += StateHasChanged;
    }

    public void Dispose()
    {
        StateService.OnStateChanged -= StateHasChanged;
    }
}

