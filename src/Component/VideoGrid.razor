@using TomAndJerry.Services
@inject IApplicationService AppService
@inherits BaseComponent

<div class="video-grid">
    @if (StateService.IsLoading)
    {
        <!-- Loading skeleton -->
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
            @for (int i = 0; i < 8; i++)
            {
                <div class="animate-pulse">
                    <div class="bg-gray-200 rounded-lg aspect-video mb-3"></div>
                    <div class="space-y-2">
                        <div class="h-4 bg-gray-200 rounded w-3/4"></div>
                        <div class="h-3 bg-gray-200 rounded w-1/2"></div>
                    </div>
                </div>
            }
        </div>
    }
    else if (StateService.CurrentVideos.Any())
    {
        <!-- Video grid -->
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
            @foreach (var video in StateService.CurrentVideos)
            {
                <Thumbnail VideoModel="@video" />
            }
        </div>
    }
    else
    {
        <!-- Empty state -->
        <div class="text-center py-12">
            <div class="text-gray-500">
                <svg class="w-16 h-16 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                </svg>
                <h3 class="text-lg font-medium text-gray-900 mb-2">No videos available</h3>
                <p class="text-gray-500">Check back later for new episodes!</p>
            </div>
        </div>
    }
</div>

@code {
    protected override async Task OnComponentInitializedAsync()
    {
        if (!AppService.IsInitialized)
        {
            await AppService.InitializeApplicationAsync();
        }
    }
}
