@using TomAndJerry.Model

@* A tablet-optimized layout with two-column feel when space allows *@
<div class="cartoon-bg">
    <div class="max-w-7xl mx-auto px-4 py-4">
        <div class="grid grid-cols-1 gap-4">
            <!-- Main -->
            <div class="space-y-4">
                <div class="relative bg-black rounded-2xl overflow-hidden shadow-2xl border-4 border-jerry-brown">
                    <div class="video-container">
                        <iframe src="@EmbedUrl"
                                frameborder="0"
                                allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
                                allowfullscreen
                                key="@CurrentVideo?.Id"
                                class="w-full h-full">
                        </iframe>
                    </div>
                </div>

                <div class="tom-jerry-card p-4">
                    <h1 class="text-2xl font-bold font-cartoon text-amber-800 leading-tight cartoon-text">
                        @(CurrentVideo?.CommentName?.Substring(6) ?? "Tom & Jerry Episode")
                    </h1>
                </div>

                <div class="bg-white rounded-2xl p-4 shadow-lg border border-gray-100">
                    <h3 class="text-xl font-bold text-gray-900 mb-2">Description</h3>
                    <p class="text-base text-gray-700 leading-relaxed">
                        @(CurrentVideo?.Description ?? "Classic Tom & Jerry episode featuring the timeless rivalry between Jerry and Tom.")
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public Video? CurrentVideo { get; set; }
    [Parameter] public string EmbedUrl { get; set; } = string.Empty;
    [Parameter] public List<Video> RandomVideos { get; set; } = new();
    [Parameter] public bool IsLoadingMore { get; set; }
    [Parameter] public bool HasMoreVideos { get; set; }
    [Parameter] public EventCallback OnLoadMore { get; set; }
    [Parameter] public EventCallback<Video> OnNavigateToVideo { get; set; }
}


